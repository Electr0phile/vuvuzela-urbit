Relevant particularities of Urbit in relation to Vuvuzela:
- Every user knows every other user's public key
  by default. Thus we don't need to set up PKI.
- All networking packets are end-to-end encrypted.
  However, our threat models include situations
  where all but one servers are compromized. Thus
  we still have to perform onion encryption.
- states are versioned, no information is ever lost,
  everything stays in history. Bad for correlation
  attacks?

Important points:
- Each round you cand send one message and receive
  one message.

Current implementation specifics:
- Checking for empty dead drop yields no response
  from the server.

Plan:
>> 0. Ships can exchange end-to-end encrypted messages
through one server.
>> 1. Dead drop logic with just one server.
>> 2. Round logic with just one server.
  >> a. Manual round logic.
  >> b. Timed round logic using behn.
  c. Gathering of incoming requests in the
     beginning of round, then simultaneous processing.
  d. Client-side logic for resending unread
  messages.
3. Chain of servers (no permutations).
4. Permutations.
5. Noise messages.
6. Make packets same size.
...
X. Make graphical interface on React.

